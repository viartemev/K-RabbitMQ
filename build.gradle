buildscript {
    ext {
        kotlin_version = '1.3.21'
        rabbitMqJavaClientVersion = '5.6.0'
        junit_jupiter_version = '5.4.0'
        junit_plugin_version = '1.2.0'
        kluent_version = '1.48'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.novoda:bintray-release:0.9"
    }
}

plugins {
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

apply plugin: "com.novoda.bintray-release"
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "idea"

configure(allprojects) { project ->
    group = 'com.viartemev'

    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "idea"

    sourceCompatibility = targetCompatibility = 1.8

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    jacocoTestReport {
        dependsOn test
        sourceSets sourceSets.main
        reports {
            html.enabled = true
            xml.enabled = true
        }
    }
    jacocoTestReport.dependsOn test
}


configure(rootProject) {
    apply plugin: "com.novoda.bintray-release"

    archivesBaseName = 'the-white-rabbit'
    description = 'The White Rabbit is an asynchronous RabbitMQ client based on Kotlin coroutines'
    version = '0.0.4'

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
        compile 'io.github.microutils:kotlin-logging:1.6.25'

        compile "com.rabbitmq:amqp-client:$rabbitMqJavaClientVersion"
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.1.1"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'

        testImplementation "org.amshove.kluent:kluent:$kluent_version"

        testCompile "com.github.kittinunf.fuel:fuel:1.16.0"
        testCompile "com.github.kittinunf.fuel:fuel-coroutines:1.16.0"
        testCompile 'com.github.kittinunf.fuel:fuel-jackson:1.16.0'

        testCompile "org.testcontainers:testcontainers:1.10.6"
        testCompile "org.testcontainers:junit-jupiter:1.10.6"

        testCompile("org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version")
    }

    publish {
        userOrg = 'viartemev'
        repoName = 'Maven'
        groupId = 'com.viartemev'
        artifactId = 'the-white-rabbit'
        publishVersion = '0.0.4'
        desc = 'The White Rabbit is an asynchronous RabbitMQ client based on Kotlin coroutines'
        website = 'https://github.com/viartemev/the-white-rabbit'
        licences = ['MIT']
    }

    test {
        useJUnitPlatform()
    }

    // force test runs even when there are no test changes
    test.outputs.upToDateWhen { false }
}


project(':the-white-rabbit-ktor-example') {
    ext {
        ktor_version = '1.1.2'
    }

    archivesBaseName = 'the-white-rabbit-ktor-example'
    description = 'Ktor integration examples'

    repositories {
        maven { url 'https://kotlin.bintray.com/ktor' }
    }

    dependencies {
        compile rootProject
        compile "io.ktor:ktor-server-netty:$ktor_version"
        compile "io.ktor:ktor-server-core:$ktor_version"
        compile "io.ktor:ktor-jackson:$ktor_version"
        testCompile "io.ktor:ktor-server-tests:$ktor_version"
    }

    test {
        useJUnitPlatform()
        jacoco {
            enabled = false
        }
    }
}
